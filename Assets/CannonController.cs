using UnityEngine;
using UnityEngine.InputSystem;

public class CannonController : MonoBehaviour
{
    [Header("References")]
    public AmmoPlatform ammoPlatform;
    public Transform shootPoint;
    public float shootForce = 50f;

    [Header("Ammo Prefab")]
    public GameObject ammoPrefab;

    void Start()
    {
        if (shootPoint == null)
        {
            Debug.LogWarning("ShootPoint not assigned. Using Shooter's transform.");
            shootPoint = transform;
        }

        if (ammoPrefab == null)
        {
            Debug.LogError("Ammo Prefab is not assigned!");
        }
    }

    public void TryShoot()
    {
        Debug.Log("–ü–æ–ø—ã—Ç–∫–∞ –≤—ã—Å—Ç—Ä–µ–ª–∞...");

        if (!ammoPlatform.HasAmmo())
        {
            Debug.Log("‚ùå –ù–µ—Ç —Å–Ω–∞—Ä—è–¥–∞ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ (–Ω–µ –∑–∞—Ä—è–∂–µ–Ω–æ).");
            return;
        }

        if (ammoPrefab == null)
        {
            Debug.LogError("Ammo Prefab –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω!");
            return;
        }

        Debug.Log("üí• –°–æ–∑–¥–∞—ë–º —Å–Ω–∞—Ä—è–¥ –∏–∑ –ø—Ä–µ—Ñ–∞–±–∞!");
        GameObject newAmmo = Instantiate(ammoPrefab, shootPoint.position, shootPoint.rotation);
        newAmmo.transform.position += shootPoint.forward * 0.1f;

        ShootAmmo(newAmmo);

        // –£–¥–∞–ª—è–µ–º —Å—Ñ–µ—Ä—É-—Ç—Ä–∏–≥–≥–µ—Ä –ø–æ—Å–ª–µ –≤—ã—Å—Ç—Ä–µ–ª–∞
        RemoveTriggerSphere();
    }

    private void ShootAmmo(GameObject ammo)
    {
        Debug.Log($"üí• –í—ã—Å—Ç—Ä–µ–ª! –°–Ω–∞—Ä—è–¥: {ammo.name}");

        Rigidbody rb = ammo.GetComponent<Rigidbody>();
        if (rb == null)
        {
            Debug.LogError("‚ùå –£ —Å–Ω–∞—Ä—è–¥–∞ –Ω–µ—Ç Rigidbody!");
            return;
        }

        rb.isKinematic = false;
        rb.linearVelocity = shootPoint.forward * shootForce;

        Debug.Log($"üöÄ –°–∫–æ—Ä–æ—Å—Ç—å —Å–Ω–∞—Ä—è–¥–∞: {rb.linearVelocity}");
        Debug.DrawRay(shootPoint.position, shootPoint.forward * 5f, Color.red, 2f); 
    }

    private void RemoveTriggerSphere()
    {
        if (ammoPlatform == null) return;

        GameObject triggerSphere = ammoPlatform.GetCurrentTriggerSphere();

        if (triggerSphere != null)
        {
            Debug.Log($"üí• –£–¥–∞–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä-—Å—Ñ–µ—Ä—É: {triggerSphere.name}");
            Destroy(triggerSphere);

            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            ammoPlatform.ResetLoadedState();
        }
        else
        {
            Debug.LogWarning("‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ñ–µ—Ä—ã-—Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.");
        }
    }
}
